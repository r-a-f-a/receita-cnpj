let _ = require('underscore'),
    docPath = require('doc-path');

/**
 * Performs a "safe" unwind on an array of documents with a given path
 * @param array
 * @param path
 */
function safeUnwind(array, path) {
    if (!array.length) { array = [array]; }

    if (path.includes('.')) {
        return unwindNestedPath(array, path);
    }
    return unwindPath(array, path);
}

function unwindPath(array, prop) {
    return array.reduce(function (acc, curr) {
            // if the value at curr[prop] is not an array, just concat to acc
            if (!_.isArray(curr[prop])) return [...acc, curr];

            return [...acc, ...curr[prop].map((x) => ({ ...curr, [prop]: x}))]
        },
        []);
}

function unwindNestedPath(array, path) {
    const splitPath = path.split('.'),
        property = splitPath.shift(),
        remainingPath = splitPath.join('.'),
        result = array.reduce((acc, curr) =>
                [...acc, ...curr[property].map((x) =>
                    ({ ...curr, [property]: safeUnwind(x, remainingPath)}))],
            []);

    return safeUnwind(result, prop);
}

const collection = [
    { a: [{ x: 1 }, { x: 2 }], b: 123 },
    { a: [{ x: 1 }, { x: 2 }], b: [ ] },
    { a: [{ x: 3 }, { x: 4 }], b: 785, c: 368 },
];

let docs = JSON.parse(JSON.stringify(collection));

// console.log(unwind(collection, 'a'));

_.each(['a', 'b'],
    function (field) {
        docs = safeUnwind(docs, field);
    });

console.log(docs);
